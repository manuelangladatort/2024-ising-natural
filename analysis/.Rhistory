################################################################################
# Iterated singing (naturalistic)
# Script: Prepare data from psynet 11 export
################################################################################
# imports
library(tidyverse)
library(egg)
library(ggpubr)
# methods
source("utils/utils.R")  # prepare data
# global parameters
set.seed(2024)
loadNamespace("egg")
theme_set(theme_pubr())
MAX_INTERVAL_SIZE = 12
interval_range = c(-MAX_INTERVAL_SIZE,MAX_INTERVAL_SIZE)
vertical.lines = seq(from=min(interval_range), to=max(interval_range), by = 1)
################################################################################
# Batch 1: iterated singing (naturalistic) - 100 nodes (across-chains)
################################################################################
data_nodes <- read_csv("data/data-clean/natising1_node_data.csv")
data_trials <- read_csv("data/data-clean/natising1_trial_data.csv")
length(table(data_nodes$network_id))
table(data_nodes$degree)
length(table(data_trials$network_id))
length(table(data_trials$degree))
# select target melodies source
data_nodes_source <- data_nodes %>%
filter(degree == 0)  %>%
mutate(
target_pitches = as.list(target_pitches),
target_intervals = as.list(target_intervals)
# target_intervals2reference = as.list(target_intervals2reference)
)
data_trials$analysis[is.na(data_trials$analysis)] <- "{}"
data_trials_unpacked = unpack_json_column(data_trials, data_trials$analysis) %>%
select(-raw, -save_plot, -analysis)
View(data_trials_unpacked)
# data_trials_unpacked$max_abs_pitch_error = data_trials_unpacked$pitch_stats$max_abs_pitch_error
# data_trials_unpacked$max_abs_interval_error = data_trials_unpacked$pitch_stats$max_abs_interval_error
# data_trials_unpacked$direction_accuracy = data_trials_unpacked$pitch_stats$direction_accuracy
data_trials_unpacked$root_mean_squared_pitch = data_trials_unpacked$pitch_stats$root_mean_squared_pitch
data_trials_unpacked$root_mean_squared_interval = data_trials_unpacked$pitch_stats$root_mean_squared_interval
# data_trials_unpacked$note_duration_max_error = data_trials_unpacked$time_stats$note_duration_max_error
data_trials_unpacked$note_duration_root_mean_squared = data_trials_unpacked$time_stats$note_duration_root_mean_squared
merge_data = data_trials_unpacked %>%
mutate(degree = degree + 1) %>%
# add target melodies in seed
bind_rows(data_nodes_source) %>%
mutate(
sung_intervals = ifelse(degree == 0, target_intervals, sung_intervals),
sung_pitches = ifelse(degree == 0, target_pitches, sung_pitches),
sung_note_durations = ifelse(degree == 0, target_note_durations, sung_note_durations)
)
data_trials_unpacked
data_nodes_source
data_trials_unpacked
data_nodes_source
data_trials_unpacked %>%
mutate(degree = degree + 1) %>%
# add target melodies in seed
bind_rows(data_nodes_source)
data_nodes_source
data_trials_unpacked
data_nodes_source
# select target melodies source
data_nodes_source <- data_nodes %>%
filter(degree == 0)  %>%
mutate(
target_pitches = as.list(target_pitches),
target_intervals = as.list(target_intervals),
target_note_durations = as.list(target_note_durations)
)
merge_data = data_trials_unpacked %>%
mutate(degree = degree + 1) %>%
# add target melodies in seed
bind_rows(data_nodes_source) %>%
mutate(
sung_intervals = ifelse(degree == 0, target_intervals, sung_intervals),
sung_pitches = ifelse(degree == 0, target_pitches, sung_pitches),
sung_note_durations = ifelse(degree == 0, target_note_durations, sung_note_durations)
)
# select target melodies source
data_nodes_source <- data_nodes %>%
filter(degree == 0)  %>%
mutate(
target_pitches = as.list(target_pitches),
target_intervals = as.list(target_intervals),
target_note_durations = as.list(target_note_durations)
) %>%
select(-target_ISIs)
merge_data = data_trials_unpacked %>%
mutate(degree = degree + 1) %>%
# add target melodies in seed
bind_rows(data_nodes_source) %>%
mutate(
sung_intervals = ifelse(degree == 0, target_intervals, sung_intervals),
sung_pitches = ifelse(degree == 0, target_pitches, sung_pitches),
sung_note_durations = ifelse(degree == 0, target_note_durations, sung_note_durations)
)
merge_data
# unfolding
column_names_int.sung = new_column_names(merge_data$sung_intervals, "sung_interval")
column_names_int.target = new_column_names(merge_data$sung_intervals, "target_interval")
column_names_pitch.sung = new_column_names(merge_data$sung_pitches, "sung_pitch")
column_names_pitch.target = new_column_names(merge_data$sung_pitches, "target_pitch")
column_names_int.sung
column_names_int.target
column_names_pitch.sung = new_column_names(merge_data$sung_pitches, "sung_pitch")
column_names_pitch.target = new_column_names(merge_data$sung_pitches, "target_pitch")
column_names_note_durations = new_column_names(merge_data$sung_note_durations, "sung_note_durations")
column_names_pitch.sung
column_names_note_durations
column_names_note_durations = new_column_names(merge_data$sung_note_durations, "sung_note_duration")
merge_data
View(merge_data)
final_data = merge_data %>%
separate(sung_intervals, column_names_int.sung, sep=",") %>%
separate(target_intervals, column_names_int.target, sep=",") %>%
separate(sung_pitches, column_names_pitch.sung, sep=",") %>%
separate(target_pitches, column_names_pitch.target, sep=",") %>%
separate(column_names_note_durations, column_names_note_durations, sep =",") %>%
mutate_at(column_names_int.sung, parse_number) %>%
mutate_at(column_names_int.target, parse_number) %>%
mutate_at(column_names_pitch.sung, parse_number) %>%
mutate_at(column_names_pitch.target, parse_number) %>%
# mutate_at(column_names_int2ref, parse_number)
return(final_data)
final_data = merge_data %>%
separate(sung_intervals, column_names_int.sung, sep=",") %>%
separate(target_intervals, column_names_int.target, sep=",") %>%
separate(sung_pitches, column_names_pitch.sung, sep=",") %>%
separate(target_pitches, column_names_pitch.target, sep=",") %>%
separate(sung_note_durations, column_names_note_durations, sep =",") %>%
mutate_at(column_names_int.sung, parse_number) %>%
mutate_at(column_names_int.target, parse_number) %>%
mutate_at(column_names_pitch.sung, parse_number) %>%
mutate_at(column_names_pitch.target, parse_number) %>%
mutate_at(column_names_note_durations, parse_number)
prepare_trial_data = function(data_nodes, data_trials){
# select target melodies source
data_nodes_source <- data_nodes %>%
filter(degree == 0)  %>%
mutate(
target_pitches = as.list(target_pitches),
target_intervals = as.list(target_intervals),
target_note_durations = as.list(target_note_durations)
) %>%
select(-target_ISIs)
data_trials$analysis[is.na(data_trials$analysis)] <- "{}"
data_trials_unpacked = unpack_json_column(data_trials, data_trials$analysis) %>%
select(-raw, -save_plot, -analysis)
# data_trials_unpacked$max_abs_pitch_error = data_trials_unpacked$pitch_stats$max_abs_pitch_error
# data_trials_unpacked$max_abs_interval_error = data_trials_unpacked$pitch_stats$max_abs_interval_error
# data_trials_unpacked$direction_accuracy = data_trials_unpacked$pitch_stats$direction_accuracy
data_trials_unpacked$root_mean_squared_pitch = data_trials_unpacked$pitch_stats$root_mean_squared_pitch
data_trials_unpacked$root_mean_squared_interval = data_trials_unpacked$pitch_stats$root_mean_squared_interval
# data_trials_unpacked$note_duration_max_error = data_trials_unpacked$time_stats$note_duration_max_error
data_trials_unpacked$note_duration_root_mean_squared = data_trials_unpacked$time_stats$note_duration_root_mean_squared
merge_data = data_trials_unpacked %>%
mutate(degree = degree + 1) %>%
# add target melodies in seed
bind_rows(data_nodes_source) %>%
mutate(
sung_intervals = ifelse(degree == 0, target_intervals, sung_intervals),
sung_pitches = ifelse(degree == 0, target_pitches, sung_pitches),
sung_note_durations = ifelse(degree == 0, target_note_durations, sung_note_durations)
)
# unfolding
column_names_int.sung = new_column_names(merge_data$sung_intervals, "sung_interval")
column_names_int.target = new_column_names(merge_data$sung_intervals, "target_interval")
column_names_pitch.sung = new_column_names(merge_data$sung_pitches, "sung_pitch")
column_names_pitch.target = new_column_names(merge_data$sung_pitches, "target_pitch")
column_names_note_durations = new_column_names(merge_data$sung_note_durations, "sung_note_duration")
final_data = merge_data %>%
separate(sung_intervals, column_names_int.sung, sep=",") %>%
separate(target_intervals, column_names_int.target, sep=",") %>%
separate(sung_pitches, column_names_pitch.sung, sep=",") %>%
separate(target_pitches, column_names_pitch.target, sep=",") %>%
separate(sung_note_durations, column_names_note_durations, sep =",") %>%
mutate_at(column_names_int.sung, parse_number) %>%
mutate_at(column_names_int.target, parse_number) %>%
mutate_at(column_names_pitch.sung, parse_number) %>%
mutate_at(column_names_pitch.target, parse_number) %>%
mutate_at(column_names_note_durations, parse_number)
return(final_data)
}
data_nets = prepare_trial_data(data_nodes[,-1], data_trials[,-1])
length(unique(data_nets$participant_id)) # 65
length(unique(data_nets$network_id)) # 100
table(data_nets$degree)
table(data_nets$trial_maker_id)
data_nets
data_nets$valence
# save
data_nets %>%
mutate(trial_type = ifelse(degree != 0, "node_trial", "source_trial")) %>%
select(-definition, -seed, -pitch_stats, -time_stats, -reason) %>%
rowwise() %>%
mutate_if(is.list, ~paste(unlist(.), collapse = ',')) %>%
write.csv("data/data-clean/natising1_full.csv", row.names = FALSE)
